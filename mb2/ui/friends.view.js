import $ from "jquery";
import '/ui/css/Friends.css';
export default class FriendsView {
    root;
    getAwareness;
    container;
    constructor(root, getAwareness) {
        this.root = root;
        this.getAwareness = getAwareness;
        this.container = $('<div>').addClass('Friends-list-page');
    }
    render() {
        this.container.empty();
        this.root.find('.main-view').empty().append(this.container);
        this.container.html(`
            <h3>Friends</h3>
            <ul></ul>
        `);
        const updateFriends = () => {
            const users = [];
            this.getAwareness().getStates().forEach((state) => {
                if (state.user)
                    users.push(state.user);
            });
            const ul = this.container.find('ul').empty();
            this.item(users, ul);
            //users.forEach(user => ul.append($('<li>').text(user.name).css('color', user.color)));
        };
        updateFriends();
        this.getAwareness().on('change', updateFriends);
    }
    item(users, ul) {
        users.forEach(user => ul.append($('<li>').text(user.name)));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJpZW5kcy52aWV3LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZnJpZW5kcy52aWV3LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUN2QixPQUFPLHFCQUFxQixDQUFDO0FBRTdCLE1BQU0sQ0FBQyxPQUFPLE9BQU8sV0FBVztJQUNYLElBQUksQ0FBUztJQUNiLFlBQVksQ0FBVztJQUN2QixTQUFTLENBQVM7SUFFbkMsWUFBWSxJQUFXLEVBQUUsWUFBcUI7UUFDMUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFDakMsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVELE1BQU07UUFDRixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBRXZCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFNUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7OztTQUduQixDQUFDLENBQUM7UUFFSCxNQUFRLGFBQWEsR0FBRyxHQUFHLEVBQUU7WUFDekIsTUFBTSxLQUFLLEdBQVUsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFxQixFQUFFLEVBQUU7Z0JBQzlELElBQUksS0FBSyxDQUFDLElBQUk7b0JBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDM0MsQ0FBQyxDQUFDLENBQUM7WUFFSCxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUU3QyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNyQix1RkFBdUY7UUFDM0YsQ0FBQyxDQUFDO1FBRUYsYUFBYSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVPLElBQUksQ0FBQyxLQUFZLEVBQUUsRUFBNEI7UUFDbkQsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAkIGZyb20gXCJqcXVlcnlcIjtcbmltcG9ydCAnL3VpL2Nzcy9GcmllbmRzLmNzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZyaWVuZHNWaWV3IHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJvb3Q6IEpRdWVyeTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGdldEF3YXJlbmVzczogRnVuY3Rpb247XG4gICAgcHJpdmF0ZSByZWFkb25seSBjb250YWluZXI6IEpRdWVyeTtcblxuICAgIGNvbnN0cnVjdG9yKHJvb3Q6SlF1ZXJ5LCBnZXRBd2FyZW5lc3M6RnVuY3Rpb24pIHtcbiAgICAgICAgdGhpcy5yb290ID0gcm9vdDtcbiAgICAgICAgdGhpcy5nZXRBd2FyZW5lc3MgPSBnZXRBd2FyZW5lc3M7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gJCgnPGRpdj4nKS5hZGRDbGFzcygnRnJpZW5kcy1saXN0LXBhZ2UnKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmVtcHR5KCk7XG5cbiAgICAgICAgdGhpcy5yb290LmZpbmQoJy5tYWluLXZpZXcnKS5lbXB0eSgpLmFwcGVuZCh0aGlzLmNvbnRhaW5lcik7XG5cbiAgICAgICAgdGhpcy5jb250YWluZXIuaHRtbChgXG4gICAgICAgICAgICA8aDM+RnJpZW5kczwvaDM+XG4gICAgICAgICAgICA8dWw+PC91bD5cbiAgICAgICAgYCk7XG5cbiAgICAgICAgY29uc3QgICB1cGRhdGVGcmllbmRzID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdXNlcnM6IGFueVtdID0gW107XG4gICAgICAgICAgICB0aGlzLmdldEF3YXJlbmVzcygpLmdldFN0YXRlcygpLmZvckVhY2goKHN0YXRlOiB7IHVzZXI6IGFueTsgfSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChzdGF0ZS51c2VyKSB1c2Vycy5wdXNoKHN0YXRlLnVzZXIpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnN0IHVsID0gdGhpcy5jb250YWluZXIuZmluZCgndWwnKS5lbXB0eSgpO1xuXG4gICAgICAgICAgICB0aGlzLml0ZW0odXNlcnMsIHVsKTtcbiAgICAgICAgICAgIC8vdXNlcnMuZm9yRWFjaCh1c2VyID0+IHVsLmFwcGVuZCgkKCc8bGk+JykudGV4dCh1c2VyLm5hbWUpLmNzcygnY29sb3InLCB1c2VyLmNvbG9yKSkpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHVwZGF0ZUZyaWVuZHMoKTtcbiAgICAgICAgdGhpcy5nZXRBd2FyZW5lc3MoKS5vbignY2hhbmdlJywgdXBkYXRlRnJpZW5kcyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpdGVtKHVzZXJzOiBhbnlbXSwgdWw6IEpRdWVyeTxIVE1MVUxpc3RFbGVtZW50Pikge1xuICAgICAgICB1c2Vycy5mb3JFYWNoKHVzZXIgPT4gdWwuYXBwZW5kKCQoJzxsaT4nKS50ZXh0KHVzZXIubmFtZSkpKTtcbiAgICB9XG59XG4iXX0=